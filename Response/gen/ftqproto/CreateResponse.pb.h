// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ftqproto/CreateResponse.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ftqproto_2fCreateResponse_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ftqproto_2fCreateResponse_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ftqproto/RequestFile.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ftqproto_2fCreateResponse_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ftqproto_2fCreateResponse_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ftqproto_2fCreateResponse_2eproto;
namespace response {
class CreateReponse;
struct CreateReponseDefaultTypeInternal;
extern CreateReponseDefaultTypeInternal _CreateReponse_default_instance_;
}  // namespace response
PROTOBUF_NAMESPACE_OPEN
template<> ::response::CreateReponse* Arena::CreateMaybeMessage<::response::CreateReponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace response {

// ===================================================================

class CreateReponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:response.CreateReponse) */ {
 public:
  inline CreateReponse() : CreateReponse(nullptr) {}
  ~CreateReponse() override;
  explicit constexpr CreateReponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreateReponse(const CreateReponse& from);
  CreateReponse(CreateReponse&& from) noexcept
    : CreateReponse() {
    *this = ::std::move(from);
  }

  inline CreateReponse& operator=(const CreateReponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateReponse& operator=(CreateReponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateReponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateReponse* internal_default_instance() {
    return reinterpret_cast<const CreateReponse*>(
               &_CreateReponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreateReponse& a, CreateReponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateReponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateReponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateReponse* New() const final {
    return new CreateReponse();
  }

  CreateReponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateReponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateReponse& from);
  void MergeFrom(const CreateReponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateReponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "response.CreateReponse";
  }
  protected:
  explicit CreateReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilesFieldNumber = 1,
  };
  // repeated .request.RequestFile files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;
  public:
  void clear_files();
  ::request::RequestFile* mutable_files(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request::RequestFile >*
      mutable_files();
  private:
  const ::request::RequestFile& _internal_files(int index) const;
  ::request::RequestFile* _internal_add_files();
  public:
  const ::request::RequestFile& files(int index) const;
  ::request::RequestFile* add_files();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request::RequestFile >&
      files() const;

  // @@protoc_insertion_point(class_scope:response.CreateReponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request::RequestFile > files_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ftqproto_2fCreateResponse_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateReponse

// repeated .request.RequestFile files = 1;
inline int CreateReponse::_internal_files_size() const {
  return files_.size();
}
inline int CreateReponse::files_size() const {
  return _internal_files_size();
}
inline ::request::RequestFile* CreateReponse::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:response.CreateReponse.files)
  return files_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request::RequestFile >*
CreateReponse::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:response.CreateReponse.files)
  return &files_;
}
inline const ::request::RequestFile& CreateReponse::_internal_files(int index) const {
  return files_.Get(index);
}
inline const ::request::RequestFile& CreateReponse::files(int index) const {
  // @@protoc_insertion_point(field_get:response.CreateReponse.files)
  return _internal_files(index);
}
inline ::request::RequestFile* CreateReponse::_internal_add_files() {
  return files_.Add();
}
inline ::request::RequestFile* CreateReponse::add_files() {
  // @@protoc_insertion_point(field_add:response.CreateReponse.files)
  return _internal_add_files();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::request::RequestFile >&
CreateReponse::files() const {
  // @@protoc_insertion_point(field_list:response.CreateReponse.files)
  return files_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace response

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ftqproto_2fCreateResponse_2eproto
